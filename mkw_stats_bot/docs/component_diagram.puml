@startuml Architecture_Components
!theme toy
skinparam backgroundColor #f8f9fa

title Mario Kart Stats Bot - Component Architecture

package "Discord Bot Application" {
    component [MarioKartBot] as Bot
    component [MarioKartCommands] as Commands
    
    package "Processing Layer" {
        component [OCRProcessor] as OCR
        component [ImageProcessor] as ImgProc
    }
    
    package "Data Layer" {
        component [DatabaseManager] as DB
        database "SQLite Database" as SQLiteDB
    }
    
    package "Configuration" {
        component [Config] as Config
        file ".env" as EnvFile
        file "config.py" as ConfigFile
    }
}

cloud "Discord API" as DiscordAPI
cloud "External Libraries" as ExtLibs

' External connections
DiscordAPI <--> Bot : Discord.py
ExtLibs <--> OCR : EasyOCR/Tesseract
ExtLibs <--> ImgProc : PIL/OpenCV

' Internal connections
Bot --> Commands : loads as cog
Bot --> OCR : processes images
Bot --> DB : stores/retrieves data
Commands --> DB : queries statistics
OCR --> DB : validates players
DB --> SQLiteDB : SQL operations

' Configuration
Config --> EnvFile : reads tokens
Config --> ConfigFile : static settings
Bot --> Config : imports settings
Commands --> Config : imports settings

' Notes
note right of Bot
    Main Discord bot class
    Handles events and reactions
    Manages confirmation system
end note

note right of Commands
    Discord.py Cog
    All user-facing commands
    Statistics and utilities
end note

note bottom of OCR
    Image text extraction
    Result parsing and validation
    War metadata creation
end note

note bottom of DB
    SQLite operations
    Player statistics
    Session management
end note

@enduml 